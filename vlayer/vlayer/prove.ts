/// <reference types="bun" />

// Vlayer klasÃ¶rÃ¼ iÃ§indeki modÃ¼ler backend yapÄ±sÄ±nÄ± kullan
import { NewsBot } from "./src/core/NewsBot";
import proverSpec from "../out/KrakenProver.sol/KrakenProver";
import verifierSpec from "../out/KrakenVerifier.sol/KrakenVerifier";
import { getConfig, createContext } from "@vlayer/sdk/config";

// Telegram bot token'Ä±
import dotenv from "dotenv";

dotenv.config();

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;

async function main() {
  try {
    console.log("ðŸŽ¯ NEWS BOT MODÃœLER BACKEND BAÅžLATILIYOR...");
    console.log("=".repeat(60));

    // vlayer konfigÃ¼rasyonu
    const config = getConfig();
    const { chain, ethClient, account, proverUrl, confirmations, notaryUrl } =
      createContext(config);

    if (!account) {
      throw new Error(
        "No account found make sure EXAMPLES_TEST_PRIVATE_KEY is set in your environment variables"
      );
    }

    console.log("âœ… KonfigÃ¼rasyon yÃ¼klendi");
    console.log("ðŸ“‹ Chain:", chain.name);
    console.log("ðŸ“‹ Account:", account.address);

    // NewsBot instance oluÅŸtur
    const newsBot = new NewsBot(
      config,
      ethClient,
      account,
      chain,
      proverUrl || "",
      notaryUrl || "",
      confirmations,
      proverSpec,
      verifierSpec,
      BOT_TOKEN!
    );

    console.log("=".repeat(60));

    // Bot'u baÅŸlat
    await newsBot.initialize();

    console.log("=".repeat(60));

    await newsBot.startLongPollingOperation();

    // Bu noktaya asla gelinmeyecek Ã§Ã¼nkÃ¼ Ã¼stteki Promise asla resolve olmayacak
  } catch (error) {
    console.error("ðŸ’¥ HATA OLUÅžTU:", error);
    // process.exit yerine daha gÃ¼venli error handling
    throw error;
  }
}

// Backend'i baÅŸlat
await main();
